{"version":3,"sources":["logo.svg","services/authService.js","services/appService.js","services/userService.js","pages/login/popUp/signUp.js","pages/login/index.js","pages/home/index.js","services/languageService.js","services/dictionaryService.js","pages/dictionary/index.js","services/helperService.js","pages/helper/index.js","pages/results/index.js","shared/hooks/paginationHook/index.js","shared/components/pagination/index.js","shared/components/paginatedTable/index.js","services/tournamentService.js","pages/tournaments/publicTournaments/index.js","pages/tournaments/myTournaments/optionsPopUp/index.js","pages/tournaments/myTournaments/index.js","shared/components/table/index.js","pages/tournaments/tournament/participants/index.js","services/privacyService.js","pages/tournaments/tournament/index.js","shared/hooks/validateModeHook/index.js","shared/hooks/validateNumericId/index.js","pages/positions/index.js","pages/error/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","url","Config","ApiURL","isAuthenticated","sessionStorage","getItem","getAuthHeader","token","headers","Authorization","concat","post","_x","_x2","_post","apply","this","arguments","_callee","resource","data","headerExtra","config","_args","regenerator_default","a","wrap","_context","prev","next","length","undefined","Object","objectSpread","abrupt","axios","stop","get","_x3","_get","_callee2","queryParams","queryString","_args2","_context2","URLSearchParams","getOwnPropertyNames","forEach","key","set","toString","patch","_x6","_x7","_patch","_callee4","_args4","_context4","deleteRes","_x8","_deleteRes","_callee5","_args5","_context5","delete","resultSubResource","tournamentsSubResource","getUserDataStruct","username","_callee3","page","limit","_context3","privacy","_callee6","_context6","SignUpPopUp","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","target","value","name","setState","defineProperty","showHide","type","state","handleSave","_this$state","password","preventDefault","stopPropagation","validated","_createUser","createUser","then","setUser","onSuccess","handleHide","catch","e","onError","handleClose","inherits","createClass","react_default","createElement","Fragment","Modal","show","onHide","backdrop","centered","Header","closeButton","Title","Form","noValidate","onSubmit","Body","Group","as","Row","className","controlId","InputGroup","FloatingLabel","Control","placeholder","required","onChange","Text","style","paddingLeft","marginLeft","id","Button","variant","onClick","size","index_esm","color","Footer","Component","LogIn","_ref","isLoged","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","setType","_useState7","_useState8","showModal","setShowModal","_useState9","_useState10","setValidated","useCallback","handleSubmit","response","status","setItem","message","statusText","toast","error","toggleSigIn","handleOnSuccess","success","handleOnError","Container","fluid","Col","md","span","offset","Card","signUp","position","react_toastify_esm","Home","marginTop","xs","Image","src","alt","getLanguages","_getLanguages","word","language","Dictionary","search","_getMeaning","getMeaning","toLowerCase","result","phrase","console","log","languages","_this2","Select","map","lang","meaning","englishLang","spanishLang","Helper","setData","setLanguage","0","1","2","3","4","greenWords","setGreenWords","yellowWords","setYellowWords","greyWords","setGreyWords","_useState11","_useState12","searchExecuted","setSearch","getWord","_getHelperWord","getHelperWord","finalPhrase","element","handleLanguageChange","handlegreyWordsChange","test","handleyellowWordsChange","handleGreenLetters0","ManageGreenWord","handleGreenLetters1","handleGreenLetters2","handleGreenLetters3","handleGreenLetters4","columnName","GreenLetters","maxlength","class","Results","setResult","setLanguages","results","setResults","init","_getDailyResults","getDailyResults","useEffect","tzoffset","Date","getTimezoneOffset","_x5","_createDailyResults","createDailyResults","user","date","now","toISOString","slice","points","handleLangChange","langResult","find","r","min","max","DOTSL","DOTSR","range","start","end","Array","from","_","idx","usePagination","totalCount","pageSize","_ref$siblingCount","siblingCount","currentPage","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","toConsumableArray","rightRange","middleRange","PaginationComponent","onPageChange","paginationRange","onNext","_ref2","asyncToGenerator","mark","onPrevious","_ref3","lastPage","Pagination","Prev","disabled","pageNumber","Ellipsis","Item","active","sent","Next","PaginatedTable","headings","_ref$pageSize","_ref$hover","hover","setPage","pageChangeHandler","newPage","Table","responsive","header","index","elements","pagination","count","participantsSubResource","positionsSubResource","addParticipants","_x11","_x12","_addParticipants","_callee9","tournamentId","_context9","getPositions","_x13","_getPositions","_callee10","_context10","PublicTournaments","setShow","selected","setSelected","getData","_getPublicTournaments","getPublicTournaments","handlePageChange","handleRowClick","handleJoin","finally","OptionsPopUp","today","fullscreen","Link","to","owner","startDate","MyTournaments","_x4","_getTournaments","getTournaments","float","NonPaginatedTable","Participants","action","participant","setParticipant","i","Tournament","redirectFromRoot","_useParams","useParams","tomorrow","setDate","getDate","pastTomorrow","tomorrowS","privacies","setPrivacies","validDate","setValidDate","validName","setValidName","endDate","tournament","setTournament","mode","_getPrivacies","getPrivacies","privacys","isNaN","parseInt","useValidateNumericId","_getTournament","getTournament","handleTournamentChange","_e$target","prevState","isValid","isInvalid","_createTournament","createTournament","_updateTournament","updateTournament","handleDelete","_deleteTournament","deleteTournament","toUpperCase","Tabs","defaultActiveKey","Tab","eventKey","title","assign","readOnly","margin","Positions","ErrorPage","App","location","useLocation","navigate","useNavigate","auth","setAuth","redirectOnNotAuth","authenticaded","pathname","handleLogOut","removeItem","handleLogIn","handleRedirect","Navbar","bg","expand","Brand","NavLink","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","rel","href","react_router","path","home","login","dictionary","helper","pages_results","publicTournaments","myTournaments","tournaments_tournament","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2e18d32c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import axios from 'axios';\r\nimport Config from '../appConfig.json';\r\n\r\nconst url = Config.ApiURL;\r\n\r\n//USO LOCAL STORAGE PROVISORIAMENTE\r\nexport function isAuthenticated(){\r\n    return sessionStorage.getItem('jwt') ? true : false;\r\n}\r\n\r\n//LOCAL STORAGE PROVISIORIO\r\nexport function auth(data){\r\n    return axios.post(`${url}/accesstoken`, data).then(\r\n        (response) => {\r\n            if(response.status === 200){\r\n                sessionStorage.setItem('jwt', response.data.response.token);\r\n                sessionStorage.setItem('loggedUser', data.username)\r\n                return {\r\n                    status :response.status\r\n                }            \r\n            }else{\r\n                return {\r\n                    status : response.status,\r\n                    message: response.statusText\r\n                }\r\n            }\r\n        }\r\n    );\r\n}\r\n\r\nexport function logOut() {\r\n    sessionStorage.removeItem('jwt');\r\n    sessionStorage.removeItem('loggedUser');\r\n}","import axios from 'axios';\r\nimport Config from '../appConfig.json';\r\n\r\nconst url = Config.ApiURL;\r\n\r\nexport function getAuthHeader () {\r\n    const token = sessionStorage.getItem('jwt');\r\n\r\n    return {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    };\r\n}\r\n\r\nexport async function post(resource , data , headerExtra = null){\r\n    let config = getAuthHeader();\r\n\r\n    if(headerExtra !== null){\r\n        config.headers = {\r\n            ...config.headers,\r\n            headerExtra\r\n        };\r\n    }\r\n\r\n    return axios.post(`${url}/${resource}`, data, config); \r\n}\r\n\r\nexport async function get(resource, queryParams = null, headerExtra = null){\r\n    let config = getAuthHeader();\r\n\r\n    if(headerExtra !== null){\r\n        config.headers = {\r\n            ...config.headers,\r\n            headerExtra\r\n        };\r\n    }\r\n\r\n    let queryString = new URLSearchParams('');\r\n    if(queryParams !== null){\r\n        Object.getOwnPropertyNames(queryParams).forEach(key => {\r\n            queryString.set(key, queryParams[key]);\r\n        });\r\n    }\r\n\r\n    return axios.get(`${url}/${resource}?${queryString.toString()}`, config);\r\n}\r\n\r\nexport async function put(resource, data, headerExtra = null){\r\n    let config = getAuthHeader();\r\n\r\n    if(headerExtra !== null){\r\n        config.headers = {\r\n            ...config.headers,\r\n            headerExtra\r\n        };\r\n    }\r\n\r\n    return axios.put(`${url}/${resource}`, data, config); \r\n}\r\n\r\nexport async function patch(resource, data, headerExtra = null){\r\n    let config = getAuthHeader();\r\n\r\n    if(headerExtra !== null){\r\n        config.headers = {\r\n            ...config.headers,\r\n            headerExtra\r\n        };\r\n    }\r\n\r\n    return axios.patch(`${url}/${resource}`, data, config); \r\n}\r\n\r\n\r\nexport async function deleteRes(resource, headerExtra = null){\r\n    let config = getAuthHeader();\r\n\r\n    if(headerExtra !== null){\r\n        config.headers = {\r\n            ...config.headers,\r\n            headerExtra\r\n        };\r\n    }\r\n\r\n    return axios.delete(`${url}/${resource}`, config);\r\n}\r\n\r\n","import axios from 'axios';\r\nimport {put, get, post} from './appService';\r\nimport Config from '../appConfig.json';\r\n\r\nconst url = Config.ApiURL;\r\n\r\nconst resource='user';\r\nconst resultSubResource='results';\r\nconst tournamentsSubResource='tournaments';\r\n\r\nexport async function createUser(data){\r\n    return axios.post(`${url}/authorization`, data);\r\n}\r\n\r\nexport async function updateUser(data){\r\n    return put(`${resource}/${data.id}`, data); \r\n}\r\n\r\nexport function getUserDataStruct () {\r\n    return {\r\n        username: sessionStorage.getItem('loggedUser')\r\n    }\r\n}\r\n\r\nexport async function getTournaments(page, limit){\r\n    return get(`${tournamentsSubResource}`, {\r\n        privacy: 'PRIVATE',\r\n        page: page,\r\n        limit: limit\r\n    });\r\n}\r\n\r\nexport async function getTournamentsCount(){\r\n    return get(`${tournamentsSubResource}/quantity`, {\r\n        privacy: 'PRIVATE'\r\n    });\r\n}\r\n\r\nexport async function getDailyResults(){\r\n    return get(`${resultSubResource}/`);\r\n}\r\n\r\nexport async function createDailyResults(data){\r\n    return post(`${resultSubResource}`, data);\r\n}","import React, {Component } from 'react'\r\nimport { FormGroup, Modal, Row } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form';\r\nimport {createUser} from '../../../services/userService';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\n\r\nimport { AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\r\n\r\nexport class SignUpPopUp extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username : '',\r\n      password : '',\r\n      type : 'password',\r\n      validated : false\r\n    }\r\n  }\r\n\r\n  handleChange= (event) => {\r\n      const target = event.target;\r\n      const value = target.value;\r\n      const name = target.name;\r\n    \r\n      this.setState ({\r\n          [name] : value,\r\n      });\r\n  }\r\n\r\n  showHide = () => {\r\n    this.setState({\r\n        type: this.state.type === 'text' ? 'password' : 'text'\r\n    });\r\n  }\r\n\r\n  handleSave = (event) => {\r\n    const {username, password} = this.state;\r\n\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if(!this.state.validated){\r\n      this.setState({validated: !this.state.validated});\r\n    }\r\n\r\n    if(!username || !password || username === '' || password === '')\r\n      return;\r\n\r\n    createUser({\r\n      username : username,\r\n      password : password\r\n    }).then(\r\n      () => {\r\n              this.props.setUser(username);\r\n              this.props.onSuccess();\r\n              this.handleHide();\r\n      }\r\n    ).catch(e => {\r\n      this.props.onError(e);\r\n    })\r\n  }\r\n\r\n  handleHide = () => {\r\n    this.setState({\r\n      username : '',\r\n      password : '',\r\n      type : 'password',\r\n      validated: false\r\n    });\r\n    this.props.handleClose();\r\n  }\r\n\r\n  render(){\r\n\r\n    return (\r\n      <>\r\n        <Modal show={this.props.show} onHide={this.handleHide} backdrop=\"static\" centered>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Create Account</Modal.Title>\r\n          </Modal.Header>\r\n          <Form noValidate validated={this.state.validated} onSubmit={this.handleSave}>\r\n            <Modal.Body>\r\n              <Form.Group as={Row} className='_6lux' controlId=\"formUsername\">\r\n                <InputGroup>\r\n                    <FloatingLabel className='group-first-element'>\r\n                        <Form.Control name=\"username\" type=\"text\" placeholder=\"Username\" required\r\n                            value={this.state.username} \r\n                            onChange={this.handleChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        </Form.Text>\r\n                        <label style={{paddingLeft:0, marginLeft: '1em'}}>UserName</label>   \r\n                    </FloatingLabel>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group as={Row} className='_6lux' controlId=\"formPassword\">\r\n                <InputGroup>\r\n                    <FloatingLabel className='group-first-element'> \r\n                        <Form.Control className=\"form-control-rounded\" \r\n                            name=\"password\" required\r\n                            id=\"password\" type={this.state.type} placeholder=\"Password\" \r\n                            value={this.state.password} onChange={this.handleChange}/>                                               \r\n                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Password</label>   \r\n                    </FloatingLabel>\r\n                    <Button variant=\"outline-secondary\"\r\n                            onClick={this.showHide}\r\n                            size=\"sm\">\r\n                            {\r\n                                this.state.type === 'text'?<AiFillEye color='black'/>:<AiFillEyeInvisible color='black'/>\r\n                            }\r\n                    </Button>\r\n                </InputGroup>\r\n              </Form.Group>              \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={this.handleHide}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" type='submit'>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Form>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPopUp\r\n","import React, {useState, useCallback} from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SignUpPopUp from './popUp/signUp';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\r\nimport {auth, isAuthenticated} from '../../services/authService';\r\n\r\nexport function LogIn ({isLoged}){\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [type, setType] = useState('password');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const showHide = useCallback(() => {\r\n        const newType = type === 'text' ? 'password' : 'text';\r\n        setType(newType);\r\n    });\r\n\r\n    const handleSubmit = useCallback((event) => {       \r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    \r\n        if(!validated){\r\n            setValidated(validated => !validated);\r\n        }\r\n    \r\n        if(!username || !password || username === '' || password === '')\r\n          return;  \r\n\r\n        auth({\r\n            username : username,\r\n            password : password\r\n        }).then(() => {\r\n                    isLoged();\r\n            }\r\n        ).catch(e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    });\r\n\r\n    const toggleSigIn = useCallback(() => {\r\n        setShowModal(showModal => !showModal);\r\n    });\r\n\r\n    const handleOnSuccess = useCallback(() => {\r\n        toast.success(\"User successfully created!   Now you can login.\");\r\n    })\r\n\r\n    const handleOnError = useCallback((e) => {\r\n        toast.error(e.response.data.response.message);\r\n    })\r\n\r\n    return (\r\n        <div className='p-5 mb-100 bg-light text-black'>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col md={{span: 6, offset:3}}>\r\n                        <br/>\r\n                        <h1>Log In</h1>\r\n                        <br/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={{span: 6, offset:3}}>\r\n                        <Card>\r\n                            {\r\n                                isAuthenticated() ? \r\n                                <Card.Body>\r\n                                    <Card.Text><h3>Already Logged In</h3></Card.Text>\r\n                                </Card.Body>\r\n                                :\r\n                                <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n                                    <Card.Body>\r\n                                        <Form.Group as={Row} className='_6lux' controlId=\"formUsername\">\r\n                                            <InputGroup>\r\n                                                <FloatingLabel className='group-first-element'>\r\n                                                    <Form.Control name=\"username\" type=\"text\" placeholder=\"Username\" required\r\n                                                        value={username} \r\n                                                        onChange={(event) => {setUsername(event.target.value)}}/>\r\n                                                    <Form.Text className=\"text-muted\">\r\n                                                    </Form.Text>\r\n                                                    <label style={{paddingLeft:0, marginLeft: '1em'}}>UserName</label>   \r\n                                                </FloatingLabel>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} className='_6lux' controlId=\"formPassword\">\r\n                                            <InputGroup>\r\n                                                <FloatingLabel className='group-first-element'> \r\n                                                    <Form.Control className=\"form-control-rounded\" \r\n                                                        name=\"password\" required\r\n                                                        id=\"password\" type={type} placeholder=\"Password\" \r\n                                                        value={password}                                                    \r\n                                                        onChange={(event) => {setPassword(event.target.value)}}/>                                               \r\n                                                    <label style={{paddingLeft:0, marginLeft: '1em'}}>Password</label>   \r\n                                                </FloatingLabel>\r\n                                                <Button variant=\"outline-secondary\"\r\n                                                        onClick={showHide}\r\n                                                        size=\"sm\">\r\n                                                        {\r\n                                                            type === 'text'?<AiFillEye color='black'/>:<AiFillEyeInvisible color='black'/>\r\n                                                        }\r\n                                                </Button>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Row className='_6lux'>\r\n                                            <div className=\"d-grid gap-2\">\r\n                                                <Button variant=\"primary\" type='submit'>\r\n                                                    Log In\r\n                                                </Button>\r\n                                            </div>\r\n                                            <div className=\"d-grid gap-2 pt-1\" onClick={toggleSigIn}>\r\n                                                <Button variant=\"primary\" >\r\n                                                    Sign Up\r\n                                                </Button>\r\n                                            </div>\r\n                                            <SignUpPopUp show={showModal} setUser={setUsername} \r\n                                            handleClose={toggleSigIn} position=\"right center\" onError={handleOnError} onSuccess={handleOnSuccess}/>\r\n                                        </Row>                             \r\n                                    </Card.Body>\r\n                                </Form>\r\n                            }\r\n                        </Card>  \r\n                    </Col>   \r\n                </Row>\r\n            </Container>\r\n            <ToastContainer/>   \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogIn","import React from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport function Home(){\r\n    return (\r\n        <>\r\n            <Container fluid>\r\n                <div style={{marginTop: 5 +'%'}}>\r\n                    <Col xs={12} md={{offset: 2, span: 8}}>\r\n                        <Row>\r\n                            <Col xs={12} md={{offset: 3, span: 6}}>\r\n                                <Image src='images/home_logo.png' alt=\"WORDLE TOURNEY\"fluid/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p><b>Wordle Tourney</b> is your all-in-one companion for Wordle!</p>\r\n                                <p>Participate in <b>custom tournaments</b>, or find the answers you are looking for with the <b>Helper</b> and <b>Dictionary</b>.</p>\r\n                            </Col>\r\n                        </Row>           \r\n                    </Col>\r\n                </div>                \r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home","import { get } from \"./appService\";\r\n\r\nconst resource = 'languages';\r\n\r\nexport async function getLanguages(){\r\n    return get(`${resource}`);\r\n}","import {get} from './appService'\r\nimport { getAuthHeader } from './appService';\r\n\r\n\r\nconst resource = 'meanings';\r\n\r\nexport async function getMeaning(word, language){\r\n    return get(`${resource}`, {\r\n        word: word,\r\n        language: language\r\n    });\r\n}","import React, { Component, useEffect } from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getLanguages } from '../../services/languageService';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { getMeaning } from '../../services/dictionaryService';\r\nexport class Dictionary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            language: 'ENGLISH',\r\n            search: '',\r\n            result: null,\r\n            languages: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        getLanguages().then(response => {\r\n                this.setState({\r\n                    languages: response.data.response.languages,\r\n                });\r\n        }).catch(e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    } \r\n\r\n    handleChange= (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState ({\r\n            [name] : value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const {language, search} = this.state;\r\n\r\n        getMeaning(search.toLowerCase(), language).then(response => {\r\n                this.setState({\r\n                    search: search,\r\n                    result: response.data.response.phrase\r\n                })\r\n        }).catch(e => {\r\n            console.log(e)\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='p-5 mb-100 bg-light text-black'>\r\n                <Col xs={12} md={{offset: 3, span: 6}}>\r\n                    <Container fluid>\r\n                        <Card  className=\"py-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Dictionary</Card.Title>\r\n                                <Form onSubmit={this.handleSubmit}>\r\n                                    <Row>\r\n                                        <Col xs={12} md={3} className=\"py-1\">\r\n                                            <Form.Group controlId=\"languageControl\">\r\n                                                <Form.Select name='language' \r\n                                                    value={this.state.language} \r\n                                                    onChange={this.handleChange}>\r\n                                                    {this.state.languages.map(lang => (\r\n                                                        <option key={lang} value={lang}>{lang}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col xs={12} md={7}  className=\"py-1\">\r\n                                            <Form.Group controlId=\"searchControl\">\r\n                                                <Form.Control type='text' name='search' placeholder='Word Search'\r\n                                                    value={this.state.search} \r\n                                                    onChange={this.handleChange}/>                                                    \r\n                                                <Form.Text className=\"text-muted\"></Form.Text>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={2} className=\"py-1\">\r\n                                            <div className={\"d-grid gap-2\"}>\r\n                                                <Button type=\"submit\">Search</Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        {\r\n                            this.state.result?\r\n                            <>\r\n                                <Card  className=\"py-2\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            {this.state.meaning}\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            {this.state.result}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                        }\r\n                    </Container>\r\n                </Col>\r\n                <ToastContainer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dictionary","import {get, post} from './appService'\r\n\r\nconst resource = 'help'\r\n\r\nexport async function getHelperWord(data){\r\n    return post(`${resource}`, data)\r\n}","import React, { useState, useCallback, useEffect } from 'react'\r\nimport {\r\n    Tabs, Tab, Card, Container, Row, Button,\r\n    Col, Form, InputGroup, FloatingLabel\r\n} from \"react-bootstrap\";\r\nimport { getLanguages } from '../../services/languageService';\r\nimport { getHelperWord } from '../../services/helperService';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nconst englishLang = 'ENGLISH';\r\nconst spanishLang = 'SPANISH';\r\n\r\nexport function Helper() {\r\n    const [data, setData] = useState(\"\")\r\n    const [language, setLanguage] = useState('ENGLISH')\r\n    const [greenWords, setGreenWords] = useState({\r\n        0:'',\r\n        1:'',\r\n        2:'',\r\n        3:'',\r\n        4:''\r\n    })\r\n    const [yellowWords, setYellowWords] = useState('')\r\n    const [greyWords, setGreyWords] = useState('')\r\n    const [searchExecuted, setSearch] = useState(false)\r\n\r\n    const getWord = () => {\r\n        getHelperWord({\r\n            language: language,\r\n            greenWords: greenWords,\r\n            yellowWords: yellowWords,\r\n            greyWords: greyWords\r\n        }).then(\r\n            response => {\r\n                    var finalPhrase = ''\r\n                    response.data.response.forEach(element => {\r\n                        finalPhrase += element.phrase + ','\r\n                    })\r\n                    setData(finalPhrase)\r\n            }\r\n        ).catch( e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        getWord()\r\n        setSearch(true)\r\n    }\r\n\r\n    const handleLanguageChange = useCallback((event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        setLanguage(value)\r\n    })\r\n\r\n    const handlegreyWordsChange = useCallback((event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        var regex = /^[A-Za-z]*$/\r\n        if(!regex.test(value))\r\n            return\r\n        setGreyWords(value)\r\n    })\r\n\r\n    const handleyellowWordsChange = useCallback((event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        var regex = /^[A-Za-z]*$/\r\n        if(!regex.test(value))\r\n            return\r\n        setYellowWords(value)\r\n    })\r\n\r\n    const handleGreenLetters0 = useCallback((event) => {\r\n        ManageGreenWord(event,\"0\")\r\n    }) \r\n    const handleGreenLetters1 = useCallback((event) => {\r\n        ManageGreenWord(event,\"1\")\r\n    }) \r\n    const handleGreenLetters2 = useCallback((event) => {\r\n        ManageGreenWord(event,\"2\")\r\n    }) \r\n    const handleGreenLetters3 = useCallback((event) => {\r\n        ManageGreenWord(event,\"3\")\r\n    }) \r\n    const handleGreenLetters4 = useCallback((event) => {\r\n        ManageGreenWord(event,\"4\")\r\n    }) \r\n\r\n    function ManageGreenWord(event, columnName){\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        var GreenLetters = greenWords\r\n        GreenLetters[columnName] = value\r\n        setGreenWords(GreenLetters)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='p-5 mb-100 bg-light text-black'>\r\n            <Col xs={12} md={{ offset: 1, span: 10 }}>\r\n                <Container fluid>\r\n                    <Card className=\"py-2\">\r\n                        <Card.Body>\r\n                            <Card.Title>Helper</Card.Title>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Row>\r\n                                        <Col className=\"py-1\">\r\n                                            <Row>\r\n                                            <Form.Group controlId=\"yellowWordsControl\">\r\n                                                <Form.Control type='text' name='yellowWords' placeholder='Yellow Letters'\r\n                                                    value={yellowWords}\r\n                                                    onChange={handleyellowWordsChange} />\r\n                                                <Form.Text className=\"text-muted\"></Form.Text>\r\n                                            </Form.Group>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            <Form.Group controlId=\"greyWordsControl\">\r\n                                                <Form.Control type='text' name='greyWords' placeholder='Grey letters'\r\n                                                    value={greyWords}\r\n                                                    onChange={handlegreyWordsChange} />\r\n                                                <Form.Text className=\"text-muted\"></Form.Text>\r\n                                            </Form.Group>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col className=\"py-1\">\r\n                                            <Form.Group className='_6lux' controlId=\"formHelperLang\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>\r\n                                                        {\r\n                                                            <Form.Select\r\n                                                                name=\"language\" required\r\n                                                                value={language}\r\n                                                                onChange={handleLanguageChange}>\r\n                                                                <option value={englishLang}>ENGLISH</option>\r\n                                                                <option value={spanishLang}>SPANISH</option>\r\n                                                            </Form.Select>\r\n                                                        }\r\n                                                        <label style={{ paddingLeft: 0, marginLeft: '1em' }}>Language</label>\r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n\r\n                                    </Row>\r\n                                        <label>Green Letters</label>\r\n\r\n                                    <Row>\r\n                                        <Col className=\"py-1\">\r\n                                            <input name = 'GreenLetter0' type=\"text\" maxlength=\"1\"  class=\"form-control form-control-sm small-input\"\r\n                                            onChange = {handleGreenLetters0}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col  className=\"py-1\">\r\n                                            <input name = 'GreenLetter1' type=\"text\" maxlength=\"1\"  class=\"form-control form-control-sm small-input\"\r\n                                            onChange = {handleGreenLetters1}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col  className=\"py-1\">\r\n                                            <input name = 'GreenLetter2' type=\"text\" maxlength=\"1\"  class=\"form-control form-control-sm small-input\"\r\n                                            onChange = {handleGreenLetters2}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col  className=\"py-1\">\r\n                                            <input name = 'GreenLetter3' type=\"text\" maxlength=\"1\"  class=\"form-control form-control-sm small-input\"\r\n                                            onChange = {handleGreenLetters3}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col  className=\"py-1\">\r\n                                            <input name = 'GreenLetter4' type=\"text\" maxlength=\"1\"  class=\"form-control form-control-sm small-input\"\r\n                                            onChange = {handleGreenLetters4}\r\n                                            />\r\n                                        </Col>                                        \r\n                                    </Row>\r\n                                    <div class=\"col-xs-1 text-center\">\r\n                                        <br></br>\r\n                                            <Button type=\"button\" onClick={handleSubmit}>Search</Button>\r\n                                    </div>\r\n                                </Row>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    {\r\n                            data != \"\" ?\r\n                            <>\r\n                                <Card  className=\"py-2\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            {\"Possible Words\"}\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            {data}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </>\r\n                            : searchExecuted ?\r\n                            <>\r\n                                <Card  className=\"py-2\">\r\n                                    <Card.Body>\r\n                                        <Card.Title>\r\n                                            {\"Possible Words\"}\r\n                                        </Card.Title>\r\n                                        <Card.Text>\r\n                                            {\"There are no possible words under these parameters\"}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                        }\r\n                </Container>\r\n            </Col>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Helper;","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { getLanguages } from \"../../services/languageService\";\r\nimport { getDailyResults, createDailyResults, getUserDataStruct } from \"../../services/userService\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport function Results () {\r\n    const [language, setLanguage] = useState('ENGLISH');\r\n    const [result, setResult] = useState(0);\r\n    const [validated, setValidated] = useState(false);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n\r\n    const init = () => {\r\n        getLanguages().then(response => {\r\n                setLanguages(response.data.response.languages);\r\n        }).catch(e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n\r\n        getDailyResults().then(response => {\r\n            if(!response.data){\r\n                setResults(response.data);\r\n            }\r\n        }).catch(e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleSubmit = useCallback((event) => {       \r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        console.log(\"handleSubmit \")\r\n\r\n/*         if(!validated){\r\n            setValidated(validated => !validated);\r\n        } */\r\n        console.log(language);\r\n        console.log(result);\r\n\r\n        if(!language || !result || language === '') {\r\n          return;\r\n        }\r\n          console.log(\"before createDailyResults \")\r\n\r\n        let tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n        createDailyResults({\r\n            user: getUserDataStruct(),\r\n            language: language,\r\n            date: (new Date(Date.now() - tzoffset)).toISOString().slice(0, 10),\r\n            points: result\r\n        }).then(() => {\r\n            toast.success(\"result created\");\r\n                init();\r\n        }).catch( e => {\r\n            toast.error(e.response.data.response.message);\r\n        })\r\n    });\r\n\r\n    const handleLangChange = useCallback((event) => {\r\n        const  value = event.target.value;\r\n        if(results.length > 0) {\r\n            const langResult = results.find((r) => (r.lang === value));\r\n            setResult(langResult.result);\r\n        } else {\r\n            setLanguage(value);\r\n        }\r\n    });\r\n\r\n    return(\r\n        <div className='p-5 mb-100 bg-light text-black'>\r\n                <Col xs={12} md={{offset: 3, span: 6}}>\r\n                    <Container fluid>\r\n                        <Card  className=\"py-2\">\r\n                            <Card.Body>\r\n                                <Card.Title>Add Result</Card.Title>\r\n                                <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n                                    <Row>\r\n                                        <Col xs={12} md={3} className=\"py-1\">\r\n                                            <Form.Group controlId=\"languageControl\">\r\n                                                <Form.Select name='language' \r\n                                                    value={language} \r\n                                                    onChange={handleLangChange}>\r\n                                                    {languages.map(lang => (\r\n                                                        <option key={lang} value={lang}>{lang}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col xs={12} md={7}  className=\"py-1\">\r\n                                            <Form.Group controlId=\"searchControl\">\r\n                                                <Form.Control type='number' name='result' placeholder='Result'\r\n                                                    value={result} min={0} max={7}\r\n                                                    onChange={(event) => {setResult(event.target.value)}}/>\r\n                                                <Form.Text className=\"text-muted\"></Form.Text>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={2} className=\"py-1\">\r\n                                            <div className={\"d-grid gap-2\"}>\r\n                                                <Button type=\"submit\">Add</Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Container>\r\n                    <ToastContainer/>\r\n                </Col>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Results","import React, {useMemo} from 'react';\r\n\r\nexport const DOTSL = -1;\r\nexport const DOTSR = -2;\r\n\r\nconst range = (start, end) => {\r\n    let length = end - start + 1;\r\n    /*\r\n        Create an array of certain length and set the elements within it from\r\n      start value to end value.\r\n    */\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage\r\n  }) => {\r\n\r\n    const paginationRange = useMemo(() => {\r\n      const totalPageCount = Math.ceil(totalCount / pageSize);\r\n  \r\n      // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n      const totalPageNumbers = siblingCount + 5;\r\n  \r\n      /*\r\n        Case 1:\r\n        If the number of pages is less than the page numbers we want to show in our\r\n        paginationComponent, we return the range [1..totalPageCount]\r\n      */\r\n      if (totalPageNumbers >= totalPageCount) {\r\n        return range(1, totalPageCount);\r\n      }\r\n      \r\n      /*\r\n          Calculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n      */\r\n      const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n      const rightSiblingIndex = Math.min(\r\n        currentPage + siblingCount,\r\n        totalPageCount\r\n      );\r\n  \r\n      /*\r\n        We do not show dots just when there is just one page number to be inserted between the extremes of sibling and the page limits i.e 1 and totalPageCount. Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n      */\r\n      const shouldShowLeftDots = leftSiblingIndex > 2;\r\n      const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n  \r\n      const firstPageIndex = 1;\r\n      const lastPageIndex = totalPageCount;\r\n  \r\n      /*\r\n          Case 2: No left dots to show, but rights dots to be shown\r\n      */\r\n      if (!shouldShowLeftDots && shouldShowRightDots) {\r\n        let leftItemCount = 3 + 2 * siblingCount;\r\n        let leftRange = range(1, leftItemCount);\r\n  \r\n        return [...leftRange, DOTSR, totalPageCount];\r\n      }\r\n  \r\n      /*\r\n          Case 3: No right dots to show, but left dots to be shown\r\n      */\r\n      if (shouldShowLeftDots && !shouldShowRightDots) {\r\n        \r\n        let rightItemCount = 3 + 2 * siblingCount;\r\n        let rightRange = range(\r\n          totalPageCount - rightItemCount + 1,\r\n          totalPageCount\r\n          );\r\n          return [firstPageIndex, DOTSL, ...rightRange];\r\n        }\r\n         \r\n        /*\r\n            Case 4: Both left and right dots to be shown\r\n        */\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n          let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n          return [firstPageIndex, DOTSL, ...middleRange, DOTSR, lastPageIndex];\r\n        }\r\n      }, [totalCount, pageSize, siblingCount, currentPage]);\r\n    \r\n      return paginationRange;\r\n    };","import React, {useState} from 'react';\r\nimport Pagination from 'react-bootstrap/Pagination';\r\nimport { DOTS, DOTSL, DOTSR, usePagination } from '../../hooks/paginationHook';\r\n\r\n\r\n\r\nexport function PaginationComponent({\r\n        onPageChange,\r\n        totalCount,\r\n        siblingCount = 1,\r\n        currentPage,\r\n        pageSize,\r\n    }) {\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n    const onNext = async () => {\r\n        onPageChange(currentPage + 1);\r\n    };\r\n\r\n    const onPrevious = async () => {\r\n        onPageChange(currentPage - 1);\r\n    };\r\n\r\n    let lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n    return (\r\n        <>\r\n            <Pagination>\r\n                <Pagination.Prev key={0} onClick={onPrevious} disabled={currentPage==1} />\r\n                {paginationRange.map(pageNumber => {\r\n        \r\n                    // If the pageItem is a DOT, render the DOTS unicode character\r\n                    if (pageNumber === DOTSL || pageNumber === DOTSR) {\r\n                        return <Pagination.Ellipsis key={pageNumber}/>;\r\n                    }\r\n                    \r\n                    return (\r\n                        <Pagination.Item key={pageNumber} active={pageNumber === currentPage} onClick={async () => await onPageChange(pageNumber)}>\r\n                            {pageNumber}\r\n                        </Pagination.Item>\r\n                    );\r\n                })}\r\n                <Pagination.Next key={lastPage+1} onClick={onNext} disabled={currentPage==lastPage}/>\r\n            </Pagination>\r\n        </>    \r\n    );\r\n}\r\n\r\nexport default PaginationComponent;","import React, {useState, useCallback} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport PaginationComponent from '../pagination';\r\nimport './style.css';\r\n\r\nexport function PaginatedTable ({headings, data, pageSize = 10, hover= true, onPageChange, onClick}) {\r\n\r\n    const [page, setPage] = useState(1);\r\n\r\n    const pageChangeHandler = useCallback(\r\n        (newPage) => {\r\n            if(newPage !== page){\r\n                onPageChange(newPage, pageSize).then(\r\n                    () => {setPage(newPage);}\r\n                );\r\n            }    \r\n        }\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Table responsive hover={hover}>\r\n                <thead>\r\n                    <tr key={0}>\r\n                    {Array.from(headings).map((header, index) => {\r\n                        return (\r\n                            <th key={index}>{header.show}</th>\r\n                        )\r\n                    })}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.from(data.elements).map((element) => {\r\n                         return (\r\n                            <tr key={element.id} onClick={() => onClick(element)}>\r\n                                {\r\n                                    Array.from(headings).map((header, index) => {\r\n                                        return (\r\n                                            <td key={index}>\r\n                                                {element[header.name]}\r\n                                            </td>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </Table>\r\n            <PaginationComponent currentPage={page} onPageChange={pageChangeHandler} pageSize={pageSize} \r\n                totalCount={data.count} siblingCount={2}/>\r\n        </>\r\n    );\r\n}","import {deleteRes, get, post, patch} from './appService'\r\nimport { getAuthHeader } from './appService';\r\n\r\nconst resource = 'tournaments';\r\nconst participantsSubResource = 'participants';\r\nconst nonParticipantsSubResource = 'nonParticipants';\r\nconst positionsSubResource = 'positions';\r\n\r\n\r\nexport async function getPublicTournaments(page, limit){\r\n    return get(`${resource}`, {\r\n        privacy: 'PUBLIC',\r\n        page: page,\r\n        limit: limit\r\n    });\r\n}\r\n\r\nexport async function getPublicTournamentsCount(){\r\n    return get(`${resource}/quantity`, {\r\n        privacy: 'PUBLIC'\r\n    });\r\n}\r\n\r\nexport async function getTournament(id){\r\n    return get(`${resource}/${id}`);\r\n}\r\n\r\nexport async function createTournament(data){\r\n    return post(`${resource}`, data);\r\n}\r\n\r\nexport async function updateTournament(id, data){\r\n    return patch(`${resource}/${id}`, data);\r\n}\r\n\r\nexport async function deleteTournament(id){\r\n    return deleteRes(`${resource}/${id}`);\r\n}\r\n\r\nexport async function getNonParticipants(tournamentId, search){\r\n    return get(`${resource}/${tournamentId}/${nonParticipantsSubResource}`, {\r\n        search: search\r\n    });\r\n}\r\n\r\nexport async function getParticipants(tournamentId){\r\n    return get(`${resource}/${tournamentId}/${participantsSubResource}`);\r\n}\r\n\r\nexport async function addParticipants(tournamentId, data){\r\n    return post(`${resource}/${tournamentId}/${participantsSubResource}`, data);\r\n}\r\n\r\nexport async function getPositions(tournamentId){\r\n    return get(`${resource}/${tournamentId}/${positionsSubResource}`);\r\n}","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { Row } from \"react-bootstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { PaginatedTable } from \"../../../shared/components/paginatedTable\";\r\nimport { addParticipants, getPublicTournaments, getPublicTournamentsCount } from \"../../../services/tournamentService\";\r\nimport { getUserDataStruct } from '../../../services/userService'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport function PublicTournaments () {\r\n    const pageSize = 10;\r\n    const [data, setData] = useState({\r\n        elements: [],\r\n        count: 10,\r\n    });\r\n    const [show, setShow] = useState(false);\r\n    const [selected, setSelected] = useState(\r\n        {\r\n            id: 0,\r\n            name: ''\r\n        }\r\n    );\r\n\r\n    const headings = [\r\n        {   \r\n            name: 'name',\r\n            show: 'Name'\r\n        },\r\n        {\r\n            name: 'language',\r\n            show: 'Language',\r\n        },\r\n        {\r\n            name: 'startDate',\r\n            show: 'Start Date'\r\n        },\r\n        {\r\n            name: 'endDate',\r\n            show: 'End Date'\r\n        }\r\n    ];\r\n\r\n    const getData = (page, pageSize) =>  {\r\n        getPublicTournaments(page, pageSize).then(\r\n            response => {\r\n                console.log(response)\r\n\r\n                setData(p => (\r\n                    {\r\n                        elements: response.data.response.elements,\r\n                        count: response.data.response.totalCount\r\n                    }\r\n                ))\r\n     \r\n            }\r\n        ).catch( e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            getData(1, pageSize);\r\n        };\r\n\r\n        init();\r\n    }, []);\r\n\r\n    const handlePageChange = useCallback(async (page, pageSize) => {\r\n        getData(page, pageSize);\r\n    });\r\n\r\n    const handleRowClick = useCallback((element) => {\r\n        setShow(true);\r\n        setSelected(element);\r\n    });\r\n\r\n    const handleHide = useCallback(() => {\r\n        setShow(false);\r\n        setSelected( {\r\n            id: 0,\r\n            name: ''\r\n        });\r\n    });\r\n\r\n    const handleJoin = useCallback(() => {\r\n        addParticipants(selected.id,getUserDataStruct()).then(\r\n            response => {\r\n                toast.success(`Successfully joined ${selected.name}!`);\r\n                setSelected( {\r\n                    id: 0,\r\n                    name: ''\r\n                });\r\n            }\r\n        ).catch(\r\n            e => {            \r\n                toast.error(e.response.data.response.message)\r\n            }\r\n        ).finally(() => {\r\n            //REFRESH TABLE?\r\n            setShow(false);\r\n        });\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Col xs={12} md={{offset: 3, span: 6}}>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Public Tournaments</Card.Title>\r\n                            {\r\n                                data.count > 0 ?\r\n                                    <>\r\n                                        <PaginatedTable \r\n                                            headings={headings}\r\n                                            data={data}\r\n                                            pageSize={pageSize}\r\n                                            onPageChange={handlePageChange}\r\n                                            onClick={handleRowClick}\r\n                                            key='publicTournaments'\r\n                                        />\r\n                                    </>\r\n                                :\r\n                                <Container fluid>\r\n                                <div style={{marginTop: 5 +'%'}}>\r\n                                    <Col xs={12} md={{offset: 2, span: 8}}>\r\n                                        <Row>\r\n                                            <Col xs={12} md={{offset: 3, span: 6}}>\r\n                                                <Image src='images/404.png' fluid/>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <i><p>No public tournaments found.</p>\r\n                                                <p>Try creating a new one!</p></i>\r\n                                            </Col>\r\n                                        </Row>\r\n                                                   \r\n                                    </Col>\r\n                                </div>                \r\n                            </Container>\r\n                            }\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>        \r\n            </Col>\r\n            <Modal size=\"sm\" show={show} onHide={handleHide} backdrop=\"static\" centered>\r\n                <Modal.Header>\r\n                    <Modal.Title>Join Tournament {selected.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\"  type={'button'} onClick={handleHide}>\r\n                        NO\r\n                    </Button>\r\n                    <Button variant=\"primary\" type={'button'} onClick={handleJoin}>\r\n                        YES\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <ToastContainer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PublicTournaments;","import React, {useState} from \"react\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row  from \"react-bootstrap/Row\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function OptionsPopUp({selected, show, handleClose}) {\r\n    let tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    const today = new Date(Date.now() - tzoffset);\r\n\r\n    return(\r\n\r\n        <>\r\n            <Modal size={'sm'} fullscreen={'sm-down'} show={show} onHide={handleClose} backdrop=\"static\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title> {selected.name}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Col>\r\n                        <Row className=\"_6lux\">\r\n                            <Button as={Link} to={`/positions/${selected.id}`}  variant=\"success\">Positions</Button>\r\n                        </Row>\r\n                        {\r\n                            (sessionStorage.getItem('loggedUser') === selected.owner.username \r\n                            && selected.startDate >= today.toISOString().slice(0, 10))?\r\n                            <>\r\n                                <Row className=\"_6lux\">\r\n                                    <Button as={Link} to={`/tournament/edit/${selected.id}`} variant=\"primary\">Edit</Button>\r\n                                </Row>\r\n                            </>\r\n                            : <></>\r\n                        }\r\n                    </Col>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { PaginatedTable } from \"../../../shared/components/paginatedTable\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OptionsPopUp from \"./optionsPopUp\";\r\nimport { getPublicTournaments } from \"../../../services/tournamentService\";\r\nimport { getTournaments, getTournamentsCount } from \"../../../services/userService\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport function MyTournaments () {\r\n    const pageSize = 10;\r\n    const [data, setData] = useState({\r\n        elements: [],\r\n        count: 10,\r\n    });\r\n    const [show, setShow] = useState(false);\r\n    const [selected, setSelected] = useState(\r\n        {\r\n            id: 0,\r\n            name: '',\r\n            owner: {username: ''},\r\n        }\r\n    );\r\n\r\n    const headings = [\r\n        {   \r\n            name: 'name',\r\n            show: 'Name'\r\n        },\r\n        {\r\n            name: 'language',\r\n            show: 'Language',\r\n        },\r\n        {\r\n            name: 'startDate',\r\n            show: 'Start Date'\r\n        },\r\n        {\r\n            name: 'endDate',\r\n            show: 'End Date'\r\n        },\r\n        {\r\n            name: 'privacy',\r\n            show: 'Privacy'\r\n        }\r\n    ];\r\n\r\n    const getData = (page, pageSize) =>  {\r\n        getTournaments(page, pageSize).then(\r\n            response => {\r\n                setData(p => (\r\n                    {\r\n                        elements: response.data.response.elements,\r\n                        count: response.data.response.totalCount\r\n                    }\r\n                ))\r\n            }\r\n        ).catch(e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            getData(1, pageSize);\r\n        };\r\n\r\n        init();\r\n    }, []);\r\n\r\n    const handlePageChange = useCallback(async (page, pageSize) => {\r\n        getData(page, pageSize);\r\n    });\r\n\r\n    const handleRowClick = useCallback((element) => {\r\n        setSelected(element);\r\n        setShow(true);\r\n    });\r\n\r\n    const handleHide = useCallback(() => {\r\n        setShow(false);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Col xs={12} md={{offset: 3, span: 6}}>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>My Tournaments</Card.Title>\r\n                            <Row>\r\n                                <Button as={Link} to={\"/tournament/create\"} variant=\"primary\" style={{float: 'left'}}>\r\n                                    Create New Tournament\r\n                                </Button>\r\n                            </Row>\r\n                            <Row>\r\n                                {\r\n                                    data.count > 0 ?\r\n                                    <>\r\n                                        <PaginatedTable \r\n                                            headings={headings}\r\n                                            data={data}\r\n                                            pageSize={pageSize}\r\n                                            onPageChange={handlePageChange}\r\n                                            onClick={handleRowClick}\r\n                                            key='myTournaments'\r\n                                        />  \r\n                                    </>\r\n                                    :\r\n                                    <Container fluid>\r\n                                    <div style={{marginTop: 5 +'%'}}>\r\n                                        <Col xs={12} md={{offset: 2, span: 8}}>\r\n                                            <Row>\r\n                                                <Col xs={12} md={{offset: 3, span: 6}}>\r\n                                                    <Image src='images/404.png' fluid/>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <i><p>No tournaments found.</p>\r\n                                                    <p>Try creating a new one!</p></i>\r\n                                                </Col>\r\n                                            </Row>\r\n                                                       \r\n                                        </Col>\r\n                                    </div>                \r\n                                </Container>\r\n                                } \r\n                            </Row>                                                     \r\n                        </Card.Body>\r\n                    </Card>\r\n                    \r\n                </Container>\r\n            </Col>\r\n            <OptionsPopUp show={show} selected={selected} handleClose={handleHide}/>  \r\n            <ToastContainer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyTournaments;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './style.css';\r\n\r\n//NON PAGINATED TABLE\r\nexport default function NonPaginatedTable ({headings, data, hover= true, onClick}) {\r\n    return (\r\n        <Table responsive hover={hover}>\r\n            <thead>\r\n                <tr key={0}>\r\n                {Array.from(headings).map((header, index) => {\r\n                    return (\r\n                        <th key={index}>{header.show}</th>\r\n                    )\r\n                })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {Array.from(data.elements).map((element) => {\r\n                        return (\r\n                        <tr key={element.id} onClick={() => onClick(element)}>\r\n                            {\r\n                                Array.from(headings).map((header, index) => {\r\n                                    return (\r\n                                        <td key={index}>\r\n                                            {element[header.name]}\r\n                                        </td>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Form, InputGroup, Row, FloatingLabel } from 'react-bootstrap';\r\nimport { Input } from \"react-bootstrap-typeahead\";\r\nimport { addParticipants, getParticipants, getPositions } from \"../../../../services/tournamentService\";\r\nimport { PaginatedTable } from \"../../../../shared/components/paginatedTable\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport NonPaginatedTable from \"../../../../shared/components/table\";\r\n\r\nexport default function Participants({id , action}){\r\n\r\n    const [participant, setParticipant] = useState(\"\");\r\n    const [data, setData] = useState({\r\n        elements: [],\r\n    });\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const headings = [\r\n        {   \r\n            name: 'name',\r\n            show: 'Name'\r\n        }\r\n    ];\r\n\r\n    const getData = () =>  {\r\n        getPositions(id).then(\r\n            response => {\r\n                setData({\r\n                    elements: Array.from(response.data.response).map((p, i) => (\r\n                        {\r\n                            id: i,\r\n                            name: p.user.username,\r\n                        }\r\n                    )),\r\n                });\r\n            }\r\n        ).catch( e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = () => {\r\n            getData();\r\n        };\r\n        init();\r\n    }, []);\r\n\r\n\r\n    const handleRowClick = useCallback((element) => {        \r\n    });\r\n\r\n    const handleSubmit = useCallback((event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    \r\n        if(!validated){\r\n            setValidated(validated => !validated);\r\n        }\r\n        \r\n        if(participant === ''){\r\n            toast.error('Complete fields');\r\n            return;\r\n        }\r\n\r\n        addParticipants(id, {username:participant}).then(\r\n            response => {\r\n                getData();\r\n                toast.success(\"Successfully added participant!\")\r\n            }\r\n        ).catch( e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n    });\r\n\r\n    return(\r\n        <>\r\n            {\r\n                action === 'edit' ? \r\n                <Row>\r\n                    <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n                        <Form.Group className='_6lux' controlId=\"formParticipantAdd\">\r\n                            <InputGroup>\r\n                                <FloatingLabel className='group-first-element'>\r\n                                            <Form.Control name=\"participant\" type=\"text\" placeholder=\"Add participant\" required\r\n                                                value={participant} \r\n                                                onChange={(event) => {setParticipant(event.target.value)}}/>\r\n                                            <Form.Text className=\"text-muted\">\r\n                                            </Form.Text>\r\n                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Add participant</label>   \r\n                                </FloatingLabel>\r\n                                <Button type={'submit'}>Add</Button>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Row>\r\n                :<></>\r\n            }\r\n            {\r\n                data.elements.length > 0 ? \r\n                <NonPaginatedTable \r\n                    data={data}\r\n                    headings={headings}\r\n                    onClick={handleRowClick}\r\n                    hover={false}\r\n                    key={'participants-table'}\r\n                />\r\n                :\r\n                <h3>\r\n                    NO SIGNED PARTICIPANTS\r\n                </h3>\r\n            }\r\n            <ToastContainer/>\r\n        </>\r\n    );\r\n}","import { get } from \"./appService\";\r\n\r\nconst resource = 'privacy';\r\n\r\nexport async function getPrivacies(){\r\n    return get(`${resource}`);\r\n    \r\n}","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { createTournament, updateTournament, getTournament, deleteTournament } from \"../../../services/tournamentService\";\r\nimport { useValidateMode } from \"../../../shared/hooks/validateModeHook\";\r\nimport { useValidateNumericId } from \"../../../shared/hooks/validateNumericId\";\r\nimport { \r\n    Tabs, Tab, Card, Container, Row, Button,\r\n    Col, Form, InputGroup, FloatingLabel\r\n} from \"react-bootstrap\";\r\nimport Participants from \"./participants\";\r\nimport { getPrivacies } from \"../../../services/privacyService\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { getLanguages } from \"../../../services/languageService\";\r\n\r\nexport function Tournament ({redirectFromRoot}) {\r\n    const {action, id} = useParams();\r\n    let tzoffset = (new Date()).getTimezoneOffset() * 60000;\r\n\r\n    const today = new Date(Date.now() - tzoffset).toISOString().slice(0,10);\r\n    const tomorrow = new Date(Date.now() - tzoffset);\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    const pastTomorrow = new Date(Date.now() - tzoffset);\r\n    pastTomorrow.setDate(pastTomorrow.getDate() + 2);\r\n\r\n    const tomorrowS = tomorrow.toISOString().slice(0,10);\r\n    const pastTomorrowS = pastTomorrow.toISOString().slice(0,10);\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const [privacies, setPrivacies] = useState([]);\r\n    const [languages, setLanguages] = useState([]);\r\n    const [validDate, setValidDate] = useState({\r\n    });\r\n    const [validName, setValidName] = useState({});\r\n    const [tournament, setTournament] = useState({\r\n        name: '',\r\n        language: 'ENGLISH',\r\n        startDate: today,\r\n        endDate: tomorrowS,\r\n        privacy: 'PRIVATE'\r\n    });\r\n\r\n    useEffect(() => {\r\n        const init =  () => {\r\n            if(!useValidateMode(action)){\r\n                redirectFromRoot('error');\r\n            }\r\n            \r\n            getLanguages().then(response => {\r\n                setLanguages(response.data.response.languages);\r\n            }).catch(e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n\r\n            getPrivacies().then(response => {\r\n                    setPrivacies(response.data.response.privacys);\r\n            }).catch(e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n\r\n            if(action !== 'create'){\r\n                if(!useValidateNumericId(id)){\r\n                    redirectFromRoot('error');\r\n                }\r\n    \r\n                getTournament(id).then(\r\n                    response => {\r\n                            if(tournament.startDate < today){\r\n                                redirectFromRoot('error');\r\n                            }\r\n\r\n                            setTournament({\r\n                                name: response.data.response.name,\r\n                                language: response.data.response.language,\r\n                                startDate: response.data.response.startDate,\r\n                                endDate: response.data.response.endDate,\r\n                                privacy: response.data.response.privacy,\r\n                            });\r\n                    }\r\n                ).catch(e => {\r\n                    toast.error(e.response.data.response.message);\r\n                })\r\n            }\r\n        }\r\n\r\n        init();\r\n    }, []);\r\n\r\n    const handleTournamentChange = useCallback((e) =>{\r\n        const { name, value } = e.target;\r\n        setTournament(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n    });\r\n\r\n    const handleSubmit = useCallback((event) => {       \r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        if(!validated){\r\n            setValidated(validated => !validated);\r\n        }\r\n\r\n        if(tournament.name === '' || !tournament.startDate || !tournament.endDate)\r\n        {\r\n            toast.error(\"Fill required fields\");\r\n\r\n            return;\r\n        }\r\n\r\n        if(tournament.endDate < tournament.startDate || tournament.startDate < today){\r\n            setValidated(false);\r\n            setValidName({\r\n                isValid: true,\r\n                isInvalid: false,\r\n            });\r\n            setValidDate({\r\n                isValid: false,\r\n                isInvalid: true,\r\n            });\r\n            toast.error(\"Dates invalid!\");\r\n            return;\r\n        }else{\r\n            setValidName({\r\n            });\r\n            setValidDate({\r\n            });\r\n        }\r\n\r\n        if(action  === 'create') {\r\n            createTournament(tournament).then(response => {\r\n                    redirectFromRoot(`tournament/edit/${response.data.response.id}`);\r\n            }).catch(e => {\r\n                toast.error(e.response.data.response.message);\r\n            })\r\n        }else{\r\n            updateTournament(id, tournament).then(() => {\r\n                    redirectFromRoot(`tournament/edit/${id}`);\r\n            }).catch(e => { \r\n                toast.error(e.response.data.response.message);\r\n            })\r\n        }\r\n    });\r\n\r\n    const handleDelete  = useCallback(() => {\r\n        deleteTournament(id).then(response => {\r\n            redirectFromRoot(`tournaments`);                \r\n        }).catch(e => {\r\n            toast.error(e.response.data.response.message);\r\n        })   \r\n    });\r\n\r\n    return(\r\n        <Container>\r\n            <Col md={{span: 6, offset: 3}} xs={12}>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Card.Title>\r\n                            {action.toUpperCase()} {action !== 'create' ? tournament.name : ''}\r\n                        </Card.Title>    \r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Tabs \r\n                            defaultActiveKey=\"data\"\r\n                            id=\"tournamentTabs\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Tab eventKey={'data'} title={'Tournament Data'}>\r\n                                <Form onSubmit={handleSubmit} noValidate validated={validated}>\r\n                                    <Row>\r\n                                        <Col md={6} xs={12}>\r\n                                            <Form.Group className='_6lux' controlId=\"formTournamentName\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>\r\n                                                        <Form.Control name=\"name\" type=\"text\" placeholder=\"Name\" required\r\n                                                            readOnly={action === 'view' || action === 'delete'}\r\n                                                            value={tournament.name} \r\n                                                            onChange={handleTournamentChange}\r\n                                                            {...validName}/>\r\n                                                        <Form.Text className=\"text-muted\">\r\n                                                        </Form.Text>\r\n                                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Name</label>   \r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={3} xs={12}>\r\n                                            <Form.Group className='_6lux' controlId=\"formTournamentLang\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>\r\n                                                        {\r\n                                                            action === 'create' || action === 'edit' ? \r\n                                                            <Form.Select \r\n                                                                name=\"language\" required\r\n                                                                readOnly={action === 'view' || action === 'delete'}\r\n                                                                value={tournament.language} \r\n                                                                onChange={handleTournamentChange}>\r\n                                                                    {languages.map(lang => (\r\n                                                                         <option key={lang} value={lang}>{lang}</option>\r\n                                                                    ))}\r\n                                                            </Form.Select>\r\n                                                            :\r\n                                                            <>\r\n                                                                <Form.Control \r\n                                                                    name=\"language\" type=\"text\"\r\n                                                                    readOnly={true}\r\n                                                                    value={tournament.language} />\r\n                                                                <Form.Text className=\"text-muted\">\r\n                                                                </Form.Text>\r\n                                                            </>\r\n                                                        }\r\n                                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Language</label>   \r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={3} xs={12}>\r\n                                            <Form.Group className='_6lux' controlId=\"formTournamentPrivacy\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>                                                        \r\n                                                        {\r\n                                                            action === 'create' || action === 'edit' ? \r\n                                                            <Form.Select name=\"privacy\" required\r\n                                                                readOnly={action === 'view' || action === 'delete'}\r\n                                                                value={tournament.privacy} \r\n                                                                onChange={handleTournamentChange}>\r\n                                                                    {\r\n                                                                        privacies.map(p => (\r\n                                                                            <option key={p} value={p}>{p}</option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                            </Form.Select>\r\n                                                            :\r\n                                                            <>\r\n                                                                <Form.Control \r\n                                                                    name=\"privacy\" type=\"text\"\r\n                                                                    readOnly={true}\r\n                                                                    value={tournament.privacy} />\r\n                                                                <Form.Text className=\"text-muted\">\r\n                                                                </Form.Text>\r\n                                                            </>\r\n                                                        }\r\n                                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Privacy</label>   \r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={6} xs={12}>\r\n                                            <Form.Group className='_6lux' controlId=\"formTournamentStart\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>\r\n                                                        <Form.Control name=\"startDate\" type=\"date\" placeholder=\"Start Date\" required\r\n                                                            readOnly={action === 'view' || action === 'delete'}\r\n                                                            value={tournament.startDate}\r\n                                                            onChange={handleTournamentChange}\r\n                                                            {...validDate}/>\r\n                                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>Start Date</label>   \r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>                                \r\n                                        <Col md={6} xs={12}>\r\n                                            <Form.Group className='_6lux' controlId=\"formTournamentEnd\">\r\n                                                <InputGroup>\r\n                                                    <FloatingLabel className='group-first-element'>\r\n                                                        <Form.Control name=\"endDate\" type=\"date\" placeholder=\"End Date\" required\r\n                                                            readOnly={action === 'view' || action === 'delete'}\r\n                                                            value={tournament.endDate}\r\n                                                            onChange={handleTournamentChange}\r\n                                                            {...validDate}/>\r\n                                                        <label style={{paddingLeft:0, marginLeft: '1em'}}>End Date</label>   \r\n                                                    </FloatingLabel>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>                         \r\n                                    <Row>\r\n                                        {\r\n                                            action === 'delete' ?\r\n                                            <Button\r\n                                                style={{\r\n                                                    margin: '1em 0 0 0 ',\r\n                                                }} \r\n                                                variant={'danger'} \r\n                                                type={'button'}\r\n                                                onClick={handleDelete}\r\n                                            >\r\n                                                Delete\r\n                                            </Button>\r\n                                            :\r\n                                            action === 'view' ? \r\n                                            <></>\r\n                                            :\r\n                                            <Button\r\n                                                style={{\r\n                                                    margin: '1em 0 0 0 ',\r\n                                                }}\r\n                                                variant={'primary'}\r\n                                                type={'submit'}                                                \r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                        }\r\n                                    </Row>\r\n                                </Form>\r\n                            </Tab>\r\n                            {\r\n                                action !== 'create'  ? \r\n                                <Tab eventKey={'participants'} title={'Participants'}>\r\n                                    <Participants action={action} id={id}/>\r\n                                </Tab>\r\n                                :\r\n                                <></>\r\n                            }\r\n                        </Tabs>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n            <ToastContainer/>\r\n        </Container>        \r\n    );\r\n}\r\n\r\nexport default Tournament;","import React from \"react\";\r\n\r\nexport function useValidateMode(mode){\r\n    return mode === 'view' || mode === 'create' || mode === 'edit' || mode === 'delete'\r\n}\r\n","import React from \"react\";\r\n\r\nexport function useValidateNumericId(id){\r\n    return !isNaN(parseInt(id));\r\n}","import React, {useState, useCallback, useEffect} from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Row } from \"react-bootstrap\";\r\nimport { getPositions } from \"../../services/tournamentService\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NonPaginatedTable from \"../../shared/components/table\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nexport default function Positions(){\r\n    const {id} = useParams();\r\n    const [data, setData] = useState({\r\n        elements: []\r\n    });\r\n    \r\n    const headings = [\r\n        {\r\n            name: 'id',\r\n            show: '#',\r\n        },\r\n        {\r\n            name: 'name',\r\n            show: 'Name',\r\n        },\r\n        {\r\n            name: 'points',\r\n            show: 'Points',\r\n        }\r\n    ];\r\n\r\n    const getData = () =>  {\r\n        getPositions(id).then(\r\n            response => {\r\n                setData({\r\n                    elements: Array.from(response.data.response).map( (p, i) => {\r\n                        return {\r\n                            id: i + 1,\r\n                            name: p.user['username'],\r\n                            points: p.points\r\n                        }\r\n                    }),\r\n                });\r\n            }\r\n        ).catch( e => {\r\n                toast.error(e.response.data.response.message);\r\n            })        \r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            getData();\r\n        };\r\n\r\n        init();\r\n    }, []);\r\n\r\n    const handleRowClick = useCallback((element) => {\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Col xs={12} md={{offset: 3, span: 6}}>\r\n                <Container fluid>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>TOP 10</Card.Title>\r\n                            <Row>\r\n                                {\r\n                                    data.elements.length > 0 ?\r\n                                    <>\r\n                                        <NonPaginatedTable \r\n                                            headings={headings}\r\n                                            data={data}\r\n                                            onClick={handleRowClick}\r\n                                            hover={false}\r\n                                            key='positions'\r\n                                        />\r\n                                    </>\r\n                                    :\r\n                                    <h3>NO SIGNED PARTICIPANTS</h3>\r\n                                }   \r\n                            </Row>                                                     \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Container>\r\n                <ToastContainer/>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nexport default function ErrorPage() {\r\n\r\n    return (\r\n        <h1>Bad Request</h1>\r\n    );\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport {Navbar, Nav, NavDropdown, Container} from 'react-bootstrap';\r\nimport { isAuthenticated, logOut } from './services/authService';\r\nimport {  Routes,  Route, NavLink, useLocation, useNavigate} from \"react-router-dom\";\r\n\r\nimport LogIn from './pages/login/index';\r\nimport Home from './pages/home/index';\r\nimport Dictionary from './pages/dictionary/index';\r\nimport Helper from './pages/helper';\r\nimport Results from './pages/results';\r\nimport PublicTournaments from './pages/tournaments/publicTournaments';\r\nimport MyTournaments from './pages/tournaments/myTournaments';\r\nimport Tournament from './pages/tournaments/tournament';\r\nimport Positions from './pages/positions';\r\nimport ErrorPage from './pages/error';\r\n\r\nexport function App (){\r\n  \r\n  let location = useLocation();\r\n  let navigate = useNavigate();\r\n\r\n  const [auth, setAuth] = useState(isAuthenticated());\r\n  \r\n  const redirectOnNotAuth = () => {\r\n    const authenticaded = isAuthenticated();\r\n    setAuth(authenticaded);\r\n    if(!authenticaded && location.pathname !== 'log-in'){\r\n      navigate('log-in');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    redirectOnNotAuth();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    redirectOnNotAuth();\r\n  }\r\n  , [location.pathname])\r\n\r\n  const handleLogOut = useCallback(() => {\r\n      logOut();\r\n      redirectOnNotAuth();\r\n  });\r\n\r\n  const handleLogIn = useCallback(() => {\r\n    setAuth(isAuthenticated());\r\n    navigate('');\r\n  });\r\n\r\n  const handleRedirect = useCallback((to) => {\r\n    navigate(to);\r\n  });\r\n\r\n  return(\r\n      \r\n    <div className=\"App\">\r\n        {\r\n          auth?\r\n          <>\r\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n              <Container>\r\n                <Navbar.Brand as={NavLink} to=\"/\">Wordle Tourney</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav className=\"me-auto\">\r\n                    <Nav.Link as={NavLink} to=\"/helper\">Helper</Nav.Link>\r\n                    <Nav.Link as={NavLink} to=\"/dictionary\">Dictionary</Nav.Link>\r\n                    <NavDropdown title=\"Tournaments\" id=\"basic-nav-dropdown\">\r\n                      <NavDropdown.Item  as={NavLink} to=\"/tournaments\">My Tournaments</NavDropdown.Item>\r\n                      <NavDropdown.Item  as={NavLink} to=\"/public-tournaments\">Public Tournaments</NavDropdown.Item>\r\n                      <NavDropdown.Divider></NavDropdown.Divider>\r\n                      <NavDropdown.Item as={NavLink} to=\"/result\">Today's Result</NavDropdown.Item>\r\n                    </NavDropdown>                      \r\n                  </Nav>\r\n                  <Nav>\r\n                    <Nav.Link rel=\"noopener noreferrer\"  href='https://www.nytimes.com/games/wordle/index.html'  target=\"_bank\">Play in English</Nav.Link>\r\n                    <Nav.Link rel=\"noopener noreferrer\"  href=\"https://wordle.danielfrg.com/\" target=\"_blank\">Juega en Español</Nav.Link>\r\n                    <Nav.Link onClick={handleLogOut}>Log Out</Nav.Link>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n              </Container>\r\n            </Navbar>\r\n          </>\r\n          : \r\n          <>\r\n          </>\r\n        }        \r\n        <Routes>\r\n          <Route path='/' element={<Home />} />\r\n          <Route path='/log-in' element={<LogIn isLoged={handleLogIn}/>} />\r\n          <Route path='/dictionary' element={<Dictionary />} />\r\n          <Route path='/helper' element={<Helper/>} />\r\n          <Route path='/result' element={<Results/>}/>\r\n          <Route path='/public-tournaments' element={<PublicTournaments/>}/>\r\n          <Route path='/tournaments' element={<MyTournaments/>}/>\r\n          <Route path='/tournament/:action/:id' element={<Tournament redirectFromRoot={handleRedirect}/>}/>\r\n          <Route path='/tournament/:action' element={<Tournament redirectFromRoot={handleRedirect}/>}/>\r\n          <Route path='/positions/:id' element={<Positions />}/>\r\n          <Route path='/error' element={<ErrorPage />}/>\r\n          <Route path='*' element={<ErrorPage />}/>\r\n        </Routes> \r\n    </div>\r\n  );      \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}